process RP = {
    
    include "Configuration/Examples/data/MessageLogger.cfi"
    
    es_source = PoolDBESSource { 
        untracked bool siteLocalConfig = true
        VPSet toGet = {
	  { string record = "TrackerAlignmentRcd" string tag = "TrackerIdealGeometry" },
	  { string record = "TrackerAlignmentErrorRcd" string tag = "TrackerIdealGeometryErrors" }
	}
	string connect = "frontier://cms_conditions_data/CMS_COND_ALIGNMENT"
	untracked uint32 authenticationMethod = 0
	string timetype = "runnumber"
	untracked uint32 messagelevel = 2 
    }

#   to re-reconstruct tracks    
#   include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

#   to re-fit tracks
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"

#   to apply misalignments
    replace TrackerDigiGeometryESModule.applyAlignment = true
    
    source = PoolSource {
	untracked vstring fileNames = {'rfio:/castor/cern.ch/cms/store/unmerged/RelVal/2006/8/13/RelVal090SingleMuMinusPt100/GEN-SIM-DIGI-RECO/0005/68DE1310-FC2A-DB11-88C4-0030485610F4.root'}
	untracked int32 maxEvents = -1
    }
    
    module print = AsciiOutputModule { }

    module RECO = PoolOutputModule {
	untracked string fileName = 'recotracker-misaligned.root'
        untracked vstring outputCommands = { 
          "drop *", 
          "keep *_ctfWithMaterialTracks_*_*",
          "keep *_TrackRefitter_*_*"  
        } 
    } 
    
#   path p1 = {ctfWithMaterialTracks } 
    path p1 = {TrackRefitter } 

    endpath outpath = {print , RECO}	
}
